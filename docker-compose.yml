services:
  postgres:
    image: postgis/postgis:16-3.4
    container_name: bauhaus-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      # (개선) 로컬 DB와의 충돌을 피하기 위해 외부 포트를 5433으로 변경합니다.
      # DB 툴에서는 localhost:5433으로 접속하면 됩니다.
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    # (✨ 핵심 개선 1) DB가 연결을 받을 준비가 되었는지 확인하는 Healthcheck 추가
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: bauhaus-backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - AI_SERVER_URL=${AI_SERVER_URL}
    ports:
      - "8888:8888"
    depends_on:
      # (✨ 핵심 개선 1) postgres 서비스가 'healthy' 상태가 될 때까지 app 시작을 대기
      postgres:
        condition: service_healthy
    # (✨ 핵심 개선 2) 생성된 정적 파일(QR, 썸네일)을 영구 보존하기 위한 볼륨 추가
    volumes:
      - static_files:/app/static-files
    restart: unless-stopped

volumes:
  postgres_data:
  # (✨ 핵심 개선 2) app 서비스에서 사용할 볼륨 정의
  static_files: